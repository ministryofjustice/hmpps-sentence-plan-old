version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7.1.0
  gradle: circleci/gradle@3.0.0
  mem: circleci/rememborb@0.0.2

_db_docker_config: &db_docker_config
  - image: cimg/openjdk:17.0
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
  - image: cimg/postgres:14.7
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

jobs:
  validate:
    executor:
      name: hmpps/java
      tag: "17"
    docker: *db_docker_config
    environment:
      _JAVA_OPTIONS: -Xmx512m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=true -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - checkout
      - gradle/with_cache:
          deps_checksum_file: "build.gradle.kts"
          steps:
            - run: ./gradlew check
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco/test

  validate_helm:
    executor:
      name: hmpps/default_small
      tag: "3.10"
    steps:
      - checkout
      - hmpps/k8s_setup
      - hmpps/install_helm
      - run:
          name: Validate dev helm config via server dry run
          command: |
            wget https://github.com/mikefarah/yq/releases/download/v4.9.6/yq_linux_amd64.tar.gz -O - |\
              tar xz && mv yq_linux_amd64 yq
            helm dependency update "$CIRCLE_PROJECT_REPONAME"
            helm template "$CIRCLE_PROJECT_REPONAME" "$CIRCLE_PROJECT_REPONAME" --values=values-dev.yaml | \
              ./yq e 'select(.kind != "Service" and .kind != "Ingress")' - | \
              kubectl apply --dry-run=server -f -
          working_directory: helm_deploy

  jib-build:
    executor:
      name: hmpps/java
      tag: "17.0"
    environment:
      _JAVA_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false
    parameters:
      image_name:
        type: string
        default: "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}"
    steps:
      - checkout
      - run:
          name: Create app version string
          command: |
            DATE=$(date '+%Y-%m-%d')
            SHORT_SHA1=$(echo $CIRCLE_SHA1 | cut -c1-7)
            VERSION=${DATE}.${CIRCLE_BUILD_NUM}.${SHORT_SHA1}
            echo "Created version string: ${VERSION}"
            echo "export VERSION=$VERSION" >> $BASH_ENV
      - mem/remember:
          env_var: APP_VERSION
          value: "${VERSION}"
      - run:
          name: Create IMAGE_NAME env var
          command: |
            IMAGE_NAME="<< parameters.image_name >>"
            echo "export IMAGE_NAME=$IMAGE_NAME" >> $BASH_ENV
      - mem/remember:
          env_var: IMAGE_NAME
          value: "${IMAGE_NAME}"
      - run:
          name: Build container image and publish
          command: |
            ./gradlew jib --image="${IMAGE_NAME}:${APP_VERSION}" -Djib.to.auth.username=${QUAYIO_USERNAME} -Djib.to.auth.password=${QUAYIO_PASSWORD} -Djib.to.tags=latest

workflows:
  version: 2

  build_test_and_deploy:
    jobs:
      - validate
      - validate_helm:
          context:
            - hmpps-interventions-dev-deploy
      - jib-build:
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
      - hmpps/trivy_latest_scan:
          name: vulnerability_scan
          slack_channel: probation-integration-notifications
          requires: [jib-build]
          context:
            - hmpps-common-vars
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - jib-build
            - validate
